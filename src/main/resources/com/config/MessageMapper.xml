<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.config.MessageMapper">

	<!-- 쪽지 List -->
	<select id="selectMessageList" resultType="MessageDTO" parameterType="String">
		<![CDATA[
			SELECT sender, reciever, content, message.datetime, send.nickname as senderNickname, send.name as senderName, recieve.nickname as recieverNickname, recieve.name as recieverName
			FROM (message LEFT OUTER JOIN member send ON (message.sender = send.id)) 
				LEFT OUTER JOIN member recieve ON (message.reciever = recieve.id)
			WHERE (sender = #{id} OR reciever = #{id}) 
				AND (send.id = sender OR send.id IS NULL) 
				AND (recieve.id = reciever OR send.id IS NULL)
			AND message.datetime in (select max(message.datetime) from message group by sender, reciever)
			ORDER BY datetime desc
		]]>
	</select>
	
	<!-- 쪽지 보내기 -->
	<insert id="sendMessage" parameterType="hashmap">
	<![CDATA[
		INSERT INTO message ( id, sender, reciever, content)
		values (seq_message.nextval, #{sender}, #{reciever}, #{content}) 
	
	]]>
	</insert>
	
	<!-- 쪽지 대화내역 가져오기-->
	<select id="getChats" resultType="MessageDTO" parameterType="hashmap">
	<![CDATA[
		SELECT sender, reciever, content, message.datetime, send.nickname as senderNickname, send.name as senderName, recieve.nickname as recieverNickname, recieve.name as recieverName
		FROM message, member send, member recieve
		WHERE (sender = #{userId} OR reciever = #{userId}) AND (sender = #{otherId} OR reciever = #{otherId}) AND send.id=sender AND recieve.id=reciever
		ORDER BY datetime
	]]>
	</select>
	

</mapper>